From bd7861b7dd6cf97091a1470100f03cdd6bc04ec4 Mon Sep 17 00:00:00 2001
From: Wangpan <hzwangpan@corp.netease.com>
Date: Tue, 17 Dec 2013 15:50:54 +0800
Subject: [PATCH] Fix a bug of auto resize confirmation

http://jira.hz.netease.com/browse/CLOUD-7803

Change-Id: Ifed771b8af1cd8fe3dfdfd39730155877612136d
---
 nova/compute/api.py                |   28 +++++---------------
 nova/compute/flavors.py            |   50 ++++++++++++++++++++++++++++++++++++
 nova/tests/compute/test_compute.py |    3 +++
 3 files changed, 59 insertions(+), 22 deletions(-)

diff --git a/nova/compute/api.py b/nova/compute/api.py
index 400be29..8bbf2c6 100644
--- a/nova/compute/api.py
+++ b/nova/compute/api.py
@@ -2211,33 +2211,17 @@ class API(base.Base):
             return sense * (new_instance_type[resource] -
                             old_instance_type[resource])
 
-        def _get_ecus_per_vcpu(instance_type):
-            try:
-                if isinstance(instance_type['extra_specs'], dict):
-                    return int(instance_type['extra_specs']['ecus_per_vcpu:'])
-                else:
-                    for ext_spec in instance_type['extra_specs']:
-                        if ext_spec.key == 'ecus_per_vcpu:':
-                            return int(ext_spec.value)
-            except Exception:
-                db_inst_type = flavors.get_flavor(instance_type['id'],
-                                                    ctxt=context)
-                return int(db_inst_type['extra_specs']['ecus_per_vcpu:'])
-
-        def _quota_ecu_delta():
-            new_ecus = new_instance_type['vcpus'] * \
-                       _get_ecus_per_vcpu(new_instance_type)
-            old_ecus = old_instance_type['vcpus'] * \
-                       _get_ecus_per_vcpu(old_instance_type)
-            return sense * (new_ecus - old_ecus)
-
         deltas = {}
+        new_instance_type['total_ecus'] = flavors.get_total_ecus(
+                                                    new_instance_type)
+        old_instance_type['total_ecus'] = flavors.get_total_ecus(
+                                                    old_instance_type)
         if compare * _quota_delta('vcpus') > 0:
             deltas['cores'] = _quota_delta('vcpus')
         if compare * _quota_delta('memory_mb') > 0:
             deltas['ram'] = _quota_delta('memory_mb')
-        if compare * _quota_ecu_delta() > 0:
-            deltas['ecus'] = _quota_ecu_delta()
+        if compare * _quota_delta('total_ecus') > 0:
+            deltas['ecus'] = _quota_delta('total_ecus')
 
         quota_local_gb = (_quota_delta('root_gb') +
                           _quota_delta('ephemeral_gb'))
diff --git a/nova/compute/flavors.py b/nova/compute/flavors.py
index df6f382..4ded514 100644
--- a/nova/compute/flavors.py
+++ b/nova/compute/flavors.py
@@ -270,6 +270,35 @@ def remove_flavor_access(flavorid, projectid, ctxt=None):
     return db.flavor_access_remove(ctxt, flavorid, projectid)
 
 
+def get_ecus_per_vcpu(flavor):
+    """Get ecus_per_vcpu info from given flavor.
+
+    Try to get ecus_per_vcpu from extra_specs firstly, if not found, try to
+    get it from flavor directly, which may be extracted from system metadata.
+
+    :return: the ecus_per_vcpu info of int type, or KeyError if not found.
+    """
+    ecus_per_vcpu = ''
+    if 'extra_specs' in flavor:
+        # ecus_per_vcpu: is string type in extra_specs
+        extra_specs = flavor['extra_specs']
+        ecus_per_vcpu = extra_specs.get('ecus_per_vcpu:', '')
+    elif 'ecus_per_vcpu' in flavor:
+        # ecus_per_vcpu has been converted to int type in flavors.py
+        ecus_per_vcpu = flavor['ecus_per_vcpu']
+
+    if ecus_per_vcpu == 0 or ecus_per_vcpu == '':
+        raise KeyError('ecus_per_vcpu')
+
+    return int(ecus_per_vcpu)
+
+
+def get_total_ecus(flavor):
+    ecus_per_vcpu = get_ecus_per_vcpu(flavor)
+    total_ecus = ecus_per_vcpu * flavor['vcpus']
+    return total_ecus
+
+
 def extract_flavor(instance, prefix=''):
     """Create an InstanceType-like object from instance's system_metadata
     information.
@@ -280,9 +309,29 @@ def extract_flavor(instance, prefix=''):
     for key, type_fn in system_metadata_flavor_props.items():
         type_key = '%sinstance_type_%s' % (prefix, key)
         instance_type[key] = type_fn(sys_meta[type_key])
+
+    # Extract ecus_per_vcpu info from system metadata
+    ecu_key = '%sinstance_type_ecus_per_vcpu' % prefix
+    if ecu_key in sys_meta:
+        instance_type['ecus_per_vcpu'] = int(sys_meta[ecu_key])
+    else:
+        LOG.error(_("ecus_per_vcpu info not found in flavor %s")
+                    % instance_type['id'])
+
     return instance_type
 
 
+def save_flavor_ecu_info(metadata, flavor, prefix):
+    try:
+        ecus_per_vcpu = get_ecus_per_vcpu(flavor)
+    except KeyError:
+        LOG.error(_("ecus_per_vcpu not found in flavor %s") % flavor['id'])
+        return
+
+    to_key = '%sinstance_type_ecus_per_vcpu' % prefix
+    metadata[to_key] = ecus_per_vcpu
+
+
 def save_flavor_info(metadata, instance_type, prefix=''):
     """Save properties from instance_type into instance's system_metadata,
     in the format of:
@@ -298,6 +347,7 @@ def save_flavor_info(metadata, instance_type, prefix=''):
         to_key = '%sinstance_type_%s' % (prefix, key)
         metadata[to_key] = instance_type[key]
     pci_request.save_flavor_pci_info(metadata, instance_type, prefix)
+    save_flavor_ecu_info(metadata, instance_type, prefix)
     return metadata
 
 
diff --git a/nova/tests/compute/test_compute.py b/nova/tests/compute/test_compute.py
index 1a994da..e186b0e 100644
--- a/nova/tests/compute/test_compute.py
+++ b/nova/tests/compute/test_compute.py
@@ -9345,6 +9345,8 @@ class DisabledInstanceTypesTestCase(BaseTestCase):
 
     def test_can_resize_to_visible_instance_type(self):
         instance = self._create_fake_instance_obj()
+        sys_meta = instance.system_metadata
+        sys_meta['instance_type_ecus_per_vcpu'] = 1
         orig_get_flavor_by_flavor_id =\
                 flavors.get_flavor_by_flavor_id
 
@@ -9354,6 +9356,7 @@ class DisabledInstanceTypesTestCase(BaseTestCase):
                                                                 ctxt,
                                                                 read_deleted)
             instance_type['disabled'] = False
+            instance_type['extra_specs'] = {'ecus_per_vcpu:': u'1'}
             return instance_type
 
         self.stubs.Set(flavors, 'get_flavor_by_flavor_id',
-- 
1.7.9.5

